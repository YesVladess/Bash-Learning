#!/usr/bin/env bash

# двоеточие - можно рассмотреть как символ встроенной команды true
# 0 в bash - это true, если что

:
echo $? # 0

# Обратите внимание Переменная $? хранит код завершения последней выполненной команды, функции или сценария.»

# еще это символ заполнитель для конструкии if then else

pwd

if [[ $? ]]
then :   # Никаких действий не производится и управление передается дальше
else
   echo "Nothing was done"
fi

# В комбинации с оператором > (оператор перенаправления вывода), усекает длину файла до нуля.
# Если указан несуществующий файл -- то он создается.


: > data.txt   # Файл "data.xxx" -- пуст»

# Тот же эффект имеет команда cat /dev/null >data.xxx
# Однако в данном случае не производится создание нового процесса, поскольку ":" является встроенной командой.

# В комбинации с оператором >> -- оператор перенаправления с добавлением в конец файла и обновлением времени последнего доступа
# (: >> new_file). Если задано имя несуществующего файла, то он создается.
# Эквивалентно команде touch.»


# Использование символа ! для логической инверсии кода возврата


true  # встроенная команда "true".
echo "код возврата команды \"true\" = $?"     # 0

! true
echo "код возврата команды \"! true\" = $?"   # 1
# Обратите внимание: символ "!" от команды необходимо отделять пробелом.
#    !true   вызовет сообщение об ошибке "command not found»

grep Linux file*.{txt,htm*}
# Поиск всех вхождений слова "Linux"
# в файлах "fileA.txt", "file2.txt", "fileR.html", "file-8»

