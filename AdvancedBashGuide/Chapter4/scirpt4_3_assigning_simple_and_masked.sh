#!/usr/bin/env bash

# Пример 4-3. Присваивание значений переменным простое и замаскированное

a=23              # Простейший случай
echo $a
b=$a
echo $b
# Теперь немного более сложный вариант (подстановка команд).
a=`echo Hello!`   # В переменную 'a' попадает результат работы команды 'echo'
echo $a

#  Обратите внимание на восклицательный знак (!) в подстанавливаемой команде
#+ этот вариант не будет работать при наборе в командной строке,
#+ поскольку здесь используется механизм "истории команд" BASH
#  Однако, в сценариях, механизм истории команд запрещен.

# У меня то, что написано выше для zsh на MacOS не поспроизвелось, все работает ок

a=`ls -l` # В переменную 'a' записывается результат работы команды 'ls -l'

echo $a # Кавычки отсутствуют, удаляются лишние пробелы и пустые строки.
echo
echo "$a" # Переменная в кавычках, все пробелы и пустые строки сохраняются. (См. главу "Кавычки.")

# Присваивание переменных с использованием $(...) (более современный метод, по сравнению с обратными кавычками)

# Взято из /etc/rc.d/rc.local
# R=$(cat /etc/redhat-release)
# arch=$(uname -m)

exit 0
